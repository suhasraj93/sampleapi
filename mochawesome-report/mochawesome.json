{
  "stats": {
    "suites": 4,
    "tests": 13,
    "passes": 12,
    "pending": 0,
    "failures": 1,
    "start": "2022-11-24T05:36:44.641Z",
    "end": "2022-11-24T05:36:52.604Z",
    "duration": 7963,
    "testsRegistered": 13,
    "passPercent": 92.3076923076923,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7f86803a-e876-428e-8da2-5b8af30b1715",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d70e7012-cab1-4047-af98-17c7c77951a2",
          "title": "verify analytics ",
          "fullFile": "D:\\unboxapi\\unboxapi1\\test\\Analytics.js",
          "file": "\\test\\Analytics.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "getSystemThroughput",
              "fullTitle": "verify analytics  getSystemThroughput",
              "timedOut": false,
              "duration": 1853,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const res=await axios.get(`${url}/cb/dashboard/v1/analytics/getSystemThroughput?startTime=1668994200000&endTime=1669080600000&type=with_refeed`,\n        \n        const res=await fetchtoken.get_method1(`/cb/dashboard/v1/analytics/getSystemThroughput?startTime=${start1}&endTime=${end1}&type=with_refeed`)\n        //console.log(\"throughput method\")\n        //console.log(res.data)\n        expect(res.status).eq(200)\n        expect(res.data.response[0].throughPut).to.exist;\n        expect(res.data.response[0].end).to.exist;",
              "err": {},
              "uuid": "4470e07b-51f3-43f5-8537-6f68ba0bedec",
              "parentUUID": "d70e7012-cab1-4047-af98-17c7c77951a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "getSessionThroughPutbyHour",
              "fullTitle": "verify analytics  getSessionThroughPutbyHour",
              "timedOut": false,
              "duration": 228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await fetchtoken.get_method1(`/cb/dashboard/v1/analytics/getSessionThroughPutByHour?startTime=${start1}&endTime=${end1}`)\n        const r1=JSON.stringify(res.data);\n        expect(await res.status).eq(200)\n        expect(res.data.data[0].data).to.exist;\n        expect(r1).to.contains(\"time\")",
              "err": {},
              "uuid": "80ce50b8-798b-48a0-a90c-fdd697199de8",
              "parentUUID": "d70e7012-cab1-4047-af98-17c7c77951a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sessionThroughPutTimes",
              "fullTitle": "verify analytics  sessionThroughPutTimes",
              "timedOut": false,
              "duration": 348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await fetchtoken.get_method1(`/cb/dashboard/v1/analytics/sessionThroughPutTimes?startTime=${start1}&endTime=${end1}&typeOfTime=day`)\n        //console.log(await res)\n        expect(res.status).eq(200)\n        expect(res.data.data.tb[0].data).to.exist;\n        expect(res.data.data.tb[0].time).to.exist;",
              "err": {},
              "uuid": "2b87899a-d2e3-4a41-bbfe-26cef64bc9b1",
              "parentUUID": "d70e7012-cab1-4047-af98-17c7c77951a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "getRobotByTime",
              "fullTitle": "verify analytics  getRobotByTime",
              "timedOut": false,
              "duration": 173,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await fetchtoken.get_method1(`/cb/dashboard/v1/analytics/sessionThroughPutTimes?startTime=${start1}&endTime=${end1}&typeOfTime=day`)\n       // console.log(await res)\n       const r1=JSON.stringify(res.data);\nexpect(res.status).eq(200)\nexpect(r1).to.contains(\"data\")\nexpect(r1).to.contains(\"time\")",
              "err": {},
              "uuid": "b9557674-e6b4-4b44-8fbd-68217ecb91c3",
              "parentUUID": "d70e7012-cab1-4047-af98-17c7c77951a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ErrorWise Count",
              "fullTitle": "verify analytics  ErrorWise Count",
              "timedOut": false,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await fetchtoken.get_method1(`/cb/dashboard/v1/analytics/getRobotByTime?startTime=${start1}&endTime=${end1}&typeOfTime=day`)\n       console.log(await res)\n       const r1=JSON.stringify(res.data);\n        expect(res.status).eq(201)\n        expect(r1).to.contains(\"data\")\n        expect(r1).to.contains(\"time\")",
              "err": {},
              "uuid": "befcca7f-414d-4a4e-88a4-b0f13fa05647",
              "parentUUID": "d70e7012-cab1-4047-af98-17c7c77951a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "totalErrorCountVsTime",
              "fullTitle": "verify analytics  totalErrorCountVsTime",
              "timedOut": false,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await fetchtoken.get_method1(`/cb/dashboard/v1/analytics/totalErrorCountVsTime?startTime=${start1}&endTime=${end1}&typeOfTime=day`)\n        //console.log(await res.data)\n        expect(res.status).eq(200)\n        expect(res.data.data[0].data).to.exist;\n        expect(res.data.data[0].time).to.exist;",
              "err": {},
              "uuid": "53cff35d-5675-423a-b8b0-26b0ecce1354",
              "parentUUID": "d70e7012-cab1-4047-af98-17c7c77951a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4470e07b-51f3-43f5-8537-6f68ba0bedec",
            "80ce50b8-798b-48a0-a90c-fdd697199de8",
            "2b87899a-d2e3-4a41-bbfe-26cef64bc9b1",
            "b9557674-e6b4-4b44-8fbd-68217ecb91c3",
            "befcca7f-414d-4a4e-88a4-b0f13fa05647",
            "53cff35d-5675-423a-b8b0-26b0ecce1354"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3270,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "6ff4b9aa-bf4e-460e-a183-402f1393eb17",
          "title": "validate bag closed",
          "fullFile": "D:\\unboxapi\\unboxapi1\\test\\bagclosed.js",
          "file": "\\test\\bagclosed.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "hour Copy",
              "fullTitle": "validate bag closed hour Copy",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res=await fetchtoken.get_method1(`cb/dashboard/v1/analytics/getClosedBagsByTime?startTime=${start1}&endTime=${end1}&typeOfTime=${typeOfTime}&operationType=${operationType}`);\nconsole.log(await res)\n       const r1=JSON.stringify(res.data);\nexpect(res.status).eq(201);",
              "err": {
                "message": "ReferenceError: fetchtoken is not defined",
                "estack": "ReferenceError: fetchtoken is not defined\n    at Context.<anonymous> (test\\bagclosed.js:7:19)\n    at processImmediate (internal/timers.js:462:21)",
                "diff": null
              },
              "uuid": "94c53690-5dad-4509-b4a6-cf413e1cd04a",
              "parentUUID": "6ff4b9aa-bf4e-460e-a183-402f1393eb17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "94c53690-5dad-4509-b4a6-cf413e1cd04a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ea5b6acb-a35e-4ce7-a17e-e86bbb7fdb75",
          "title": "Login api ",
          "fullFile": "D:\\unboxapi\\unboxapi1\\test\\Loginapi.js",
          "file": "\\test\\Loginapi.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "validate login with username and password ",
              "fullTitle": "Login api  validate login with username and password ",
              "timedOut": false,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload={\"username\":\"ubr_test\",\"password\":\"ubr_test@123\"};\n  const res=await axios.post(loginurl,payload)\n  //console.log(await res.data.data.token)\n  expect(await res.status).eql(200)",
              "err": {},
              "uuid": "ca8c0e2b-9aa5-4234-a013-6a34e7f70dc8",
              "parentUUID": "ea5b6acb-a35e-4ce7-a17e-e86bbb7fdb75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca8c0e2b-9aa5-4234-a013-6a34e7f70dc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 141,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f9d354aa-a75d-4e43-b3e6-4697f88e2275",
          "title": "vaerify parcelscanner ",
          "fullFile": "D:\\unboxapi\\unboxapi1\\test\\parcelscanner.js",
          "file": "\\test\\parcelscanner.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Hour",
              "fullTitle": "vaerify parcelscanner  Hour",
              "timedOut": false,
              "duration": 849,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await fetchtoken.get_method1(`/cb/dashboard/v1/analytics/getParcelSystemByTime?startTime=${start1}&endTime=${end1}&typeOfTime=${typeOfTime}&dataType=${dataType}&operationType=${operationType}`)\n  const r1=JSON.stringify(res.data);\n  //console.log(res)\n  expect(res.status).eq(201)",
              "err": {},
              "uuid": "3e49caca-2c27-4959-9501-b20b7ec194bb",
              "parentUUID": "f9d354aa-a75d-4e43-b3e6-4697f88e2275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "day",
              "fullTitle": "vaerify parcelscanner  day",
              "timedOut": false,
              "duration": 1161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await fetchtoken.get_method1(`/cb/dashboard/v1/analytics/getParcelSystemByTime?startTime=${start1}&endTime=${end1}&typeOfTime=day&dataType=${dataType}&operationType=${operationType}`)\nconsole.log(res)\nexpect(res.status).eq(201)",
              "err": {},
              "uuid": "459e3d03-0aea-4cdc-8a82-6e19ff7f6ab1",
              "parentUUID": "f9d354aa-a75d-4e43-b3e6-4697f88e2275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "acceptedparcelreport",
              "fullTitle": "vaerify parcelscanner  acceptedparcelreport",
              "timedOut": false,
              "duration": 1306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await fetchtoken.get_method1(`/cb/dashboard/v1/reports/shipment-details?scanStatus=accepted&parcelStatus=sorted&dataPushStatus=all&type=view&lowTime=${start1}&upTime=${end1}`)\nconsole.log(res)\nexpect(res.status).eq(200)",
              "err": {},
              "uuid": "3cbb1646-5a5a-4da7-a020-09d10e805f75",
              "parentUUID": "f9d354aa-a75d-4e43-b3e6-4697f88e2275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "rejectedParcelReport",
              "fullTitle": "vaerify parcelscanner  rejectedParcelReport",
              "timedOut": false,
              "duration": 917,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await fetchtoken.get_method1(`/cb/dashboard/v1/reports/shipment-details?scanStatus=rejected&parcelStatus=all&dataPushStatus=all&type=view&lowTime=${start1}&upTime=${end1}`)\nconsole.log(res)\nexpect(res.status).eq(200)",
              "err": {},
              "uuid": "2517ab98-27ff-428a-b956-96793ea0159e",
              "parentUUID": "f9d354aa-a75d-4e43-b3e6-4697f88e2275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "refeedparcelreport",
              "fullTitle": "vaerify parcelscanner  refeedparcelreport",
              "timedOut": false,
              "duration": 287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res=await fetchtoken.get_method1(`/cb/dashboard/v1/reports/shipment-details?scanStatus=accepted&parcelStatus=refeed&dataPushStatus=all&type=view&lowTime={{start1}}&upTime={{end1}}`)\nconsole.log(res)\nexpect(res.status).eq(200)",
              "err": {},
              "uuid": "58dfc78d-3d83-4283-b0cb-ce8a9ee272a6",
              "parentUUID": "f9d354aa-a75d-4e43-b3e6-4697f88e2275",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e49caca-2c27-4959-9501-b20b7ec194bb",
            "459e3d03-0aea-4cdc-8a82-6e19ff7f6ab1",
            "3cbb1646-5a5a-4da7-a020-09d10e805f75",
            "2517ab98-27ff-428a-b956-96793ea0159e",
            "58dfc78d-3d83-4283-b0cb-ce8a9ee272a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}